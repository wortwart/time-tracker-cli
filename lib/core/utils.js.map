{"version":3,"sources":["../../src/core/utils.js"],"names":["recognizeModifierTiming","string","r","arr","res","exec","push","value","momentKey","calcRate","rate","total","amount","mod","substr","length","slice","parseFloat","toFixed","humanParseDiff","secs","hours","Math","floor","minutes","seconds"],"mappings":";;;;;AAAO,IAAMA,4DAA0B,SAA1BA,uBAA0B,CAAUC,MAAV,EAAkB;AACxD,KAAIC,IAAI,kBAAR;AACA,KAAIC,YAAJ;AACA,KAAIC,MAAM,EAAV;AACA,QAAO,CAACD,MAAMD,EAAEG,IAAF,CAAOJ,MAAP,CAAP,MAA2B,IAAlC,EAAwC;AACvCG,MAAIE,IAAJ,CAAS;AACRC,UAAOJ,IAAI,CAAJ,CADC;AAERK,cAAWL,IAAI,CAAJ;AAFH,GAAT;AAIA;AACD,QAAOC,GAAP;AACA,CAXM;;AAaA,IAAMK,8BAAW,SAAXA,QAAW,CAAUC,IAAV,EAAgBC,KAAhB,EAAuB;AAC9C,KAAIC,eAAJ;AACA,KAAIC,MAAMH,KAAKI,MAAL,CAAYJ,KAAKK,MAAL,GAAc,CAA1B,CAAV;AACA,KAAIR,QAAQG,KAAKM,KAAL,CAAW,CAAX,EAAcN,KAAKK,MAAL,GAAc,CAA5B,CAAZ;AACA,SAAQF,GAAR;AACC,OAAK,GAAL;AACCD,YAAUD,QAAM,EAAN,GAAS,EAAV,GAAcM,WAAWV,KAAX,CAAvB;AACA;AACD,OAAK,GAAL;AACCK,YAAUD,QAAM,EAAP,GAAWM,WAAWV,KAAX,CAApB;AACA;AACD,OAAK,GAAL;AACCK,YAASD,QAAMM,WAAWV,KAAX,CAAf;AACA;AATF;AAWA,QAAOK,OAAOM,OAAP,CAAe,CAAf,CAAP;AACA,CAhBM;;AAkBA,IAAMC,0CAAiB,SAAjBA,cAAiB,CAASC,IAAT,EAAe;AAC5C,KAAIC,QAAUC,KAAKC,KAAL,CAAWH,OAAO,IAAlB,CAAd;AACA,KAAII,UAAUF,KAAKC,KAAL,CAAW,CAACH,OAAQC,QAAQ,IAAjB,IAA0B,EAArC,CAAd;AACA,KAAII,UAAUL,OAAQC,QAAQ,IAAhB,GAAyBG,UAAU,EAAjD;AACAH,SAASA,SAAS,CAAT,GAAa,EAAb,GAAkB,CAACA,QAAQ,EAAR,GAAa,MAAMA,KAAnB,GAA2BA,KAA5B,IAAqC,GAAhE;AACAG,WAAYA,WAAW,CAAX,IAAgBH,SAAS,EAA1B,GAAgC,EAAhC,GAAqC,CAACG,UAAU,EAAV,GAAe,MAAMA,OAArB,GAA+BA,OAAhC,IAA2C,GAA3F;AACAC,WAAWA,WAAW,CAAX,GAAe,EAAf,GAAoB,CAACA,UAAW,EAAX,GAAgB,MAAMA,OAAtB,GAAgCA,OAAjC,IAA4C,GAA3E;AACA,QAAOJ,QAAQG,OAAR,GAAkBC,OAAzB;AACA,CARM","file":"utils.js","sourcesContent":["export const recognizeModifierTiming = function (string) {\n\tlet r = /(\\d{1,})([hms])/g\n\tlet arr\n\tlet res = []\n\twhile ((arr = r.exec(string)) !== null) {\n\t\tres.push({\n\t\t\tvalue: arr[1],\n\t\t\tmomentKey: arr[2]\n\t\t})\n\t}\n\treturn res\n}\n\nexport const calcRate = function (rate, total) {\n\tlet amount\n\tlet mod = rate.substr(rate.length - 1)\n\tlet value = rate.slice(0, rate.length - 1)\n\tswitch (mod) {\n\t\tcase 'h':\n\t\t\tamount = (total/60/60)*parseFloat(value)\n\t\t\tbreak;\n\t\tcase 'm':\n\t\t\tamount = (total/60)*parseFloat(value)\n\t\t\tbreak;\n\t\tcase 's':\n\t\t\tamount = total*parseFloat(value)\n\t\t\tbreak;\n\t}\n\treturn amount.toFixed(2)\n}\n\nexport const humanParseDiff = function(secs) {\n\tlet hours   = Math.floor(secs / 3600)\n\tlet minutes = Math.floor((secs - (hours * 3600)) / 60)\n\tlet seconds = secs - (hours * 3600) - (minutes * 60)\n\thours = (hours == 0 ? '' : (hours < 10 ? '0' + hours : hours) + 'h')\n\tminutes = ((minutes == 0 && hours == '') ? '' : (minutes < 10 ? '0' + minutes : minutes) + 'm')\n\tseconds = (seconds == 0 ? '' : (seconds  < 10 ? '0' + seconds : seconds) + 's')\n\treturn hours + minutes + seconds\n}\n"]}