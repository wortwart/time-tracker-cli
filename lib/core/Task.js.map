{"version":3,"sources":["../../src/core/Task.js"],"names":["Task","task","description","timings","t","stop","diff","start","time","operation","timing","length","newStop","value","momentKey","isBefore","Promise","resolve","reject","started","error","push","toDate","setDescription","setStatus","log","toISOString","text","status","stringTime","parsed","map","_modifyTiming","err","console","duration","forEach","_calcTime"],"mappings":"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","file":"Task.js","sourcesContent":["import moment from 'moment'\nimport {STARTED, PAUSED, IN_PROGRESS, FINISHED} from './constants'\nimport {recognizeModifierTiming} from './Utils'\nimport {cliError} from './output'\n\nexport default class Task {\n\tconstructor(task){\n\t\tthis.task = (task) ? task : {\n\t\t\tdescription: '',\n\t\t\ttimings: []\n\t\t}\n\t}\n\n\t_calcTime(t) {\n\t\tif (t.stop)\n\t\t\treturn moment(t.stop).diff(moment(t.start), 'seconds')\n\t\telse\n\t\t\treturn moment().diff(moment(t.start), 'seconds')\n\t}\n\n\t_modifyTiming(time, operation) {\n\t\tlet timing = this.task.timings[this.task.timings.length - 1]\n\t\tif (!timing) {\n\t\t\tthrow (`This task is not started, start it.`)\n\t\t}\n\t\tlet newStop = moment(timing.stop)\n\t\tnewStop = newStop[operation](time.value, time.momentKey)\n\t\tif (operation === 'subtract' && newStop.isBefore(timing.start)){\n\t\t\tthrow('You cant subtract more time')\n\t\t\treturn\n\t\t}\n\t\tthis.task.timings[this.task.timings.length - 1].stop = newStop\n\t}\n\n\tstart(description) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tlet started = false\n\t\t\tlet timing = this.task.timings[this.task.timings.length - 1]\n\t\t\tif (timing && timing.start && !timing.stop)\n\t\t\t\treject(this.error(`This task already started.`))\n\t\t\tthis.task.timings.push({start: moment().toDate()})\n\t\t\tthis.setDescription(description)\n\t\t\tthis.setStatus(IN_PROGRESS)\n\t\t\tthis.log('start')\n\t\t\tresolve()\n\t\t})\n\t}\n\n\tpause() {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tlet timing = this.task.timings[this.task.timings.length - 1]\n\t\t\tif (!timing)\n\t\t\t\treject(this.error(`This task is not started, start it.`))\n\t\t\tif (timing && timing.start && timing.stop)\n\t\t\t\treject(this.error(`This task are ended/paused, unpaused it.`))\n\t\t\tthis.task.timings[this.task.timings.length - 1].stop = moment().toDate()\n\t\t\tthis.setStatus(PAUSED)\n\t\t\tthis.log('pause')\n\t\t\tresolve()\n\t\t})\n\t}\n\n\tunpause() {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tlet timing = this.task.timings[this.task.timings.length - 1]\n\t\t\tif (!timing)\n\t\t\t\treject(this.error(`This task is not started, start it`))\n\t\t\tif (timing && timing.start && !timing.stop)\n\t\t\t\treject(this.error(`This task is started, pause/stop first`))\n\t\t\tthis.task.timings.push({start: moment().toDate()})\n\t\t\tthis.setStatus(IN_PROGRESS)\n\t\t\tthis.log('unpause')\n\t\t\tresolve()\n\t\t})\n\t}\n\n\tstop(description) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tlet timing = this.task.timings[this.task.timings.length - 1]\n\t\t\tif (!timing || timing && !timing.start)\n\t\t\t\treject(this.error(`This task is not started, start it`))\n\t\t\tif (timing.start && timing.stop)\n\t\t\t\treject(this.error(`This task already ended, start/unpause it.`))\n\t\t\tthis.task.timings[this.task.timings.length - 1].stop = moment().toDate()\n\t\t\tthis.setDescription(description)\n\t\t\tthis.setStatus(FINISHED)\n\t\t\tthis.log('stop')\n\t\t\tresolve()\n\t\t})\n\t}\n\n\tlog(operation) {\n\t\tif (!this.task.log)\n\t\t\tthis.task.log = []\n\t\tthis.task.log.push(`${operation}#${moment().toISOString()}`)\n\t}\n\n\tsetDescription(text) {\n\t\tthis.task.description = (text) ? text : (this.task.description) ? this.task.description : ''\n\t}\n\n\tsetStatus(status) {\n\t\tthis.task.status = status\n\t}\n\n\tmakeOperationOverTime(operation, stringTime) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tlet parsed = recognizeModifierTiming(stringTime)\n\t\t\ttry {\n\t\t\t\tparsed.map((t) => {\n\t\t\t\t\tthis._modifyTiming(t, operation)\n\t\t\t\t})\n\t\t\t} catch(err) {\n\t\t\t\tconsole.error(err)\n\t\t\t\treject(this.error(`Error trying to ${operation} time to task`))\n\t\t\t}\n\t\t\tthis.log(`${operation}:${stringTime}`)\n\t\t\tresolve()\n\t\t})\n\t}\n\n\tget() {\n\t\treturn this.task\n\t}\n\n\tgetSeconds() {\n\t\tlet duration = 0\n\t\tif (this.task.timings) {\n\t\t\tthis.task.timings.forEach(timing => {\n\t\t\t\tduration += this._calcTime(timing)\n\t\t\t})\n\t\t} else {\n\t\t\tduration = this._calcTime(this.task)\n\t\t}\n\t\treturn duration\n\t}\n\n\tgetStartDate() {\n\t\tif (this.task.timings){\n\t\t\treturn this.task.timings[0].start\n\t\t} else {\n\t\t\treturn this.task.start\n\t\t}\n\t}\n\n\terror(err) {\n\t\treturn err //+ ` \\n Task: ${JSON.stringify(this.task)}`\n\t}\n}\n"]}